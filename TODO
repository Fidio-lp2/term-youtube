何をどうやって実装すればいいのか全くわかんにゃ〜い^^^^^
どうやってどうするんやマジで

stream.pyのもともとの設計理念はpafyとvlcモジュールを使ってurlさえあればターミナル上で音楽が聴けるってことだからなぁ...どうしまshow timeって感じだわwwwwww

...クラスメソッドしか用意してないし、もともとインスタンスとして利用してもらいたいって感じで実装した(ライブラリとして実装してない)から、なぁ..............うーんこのうーんこはうーんこうんこうんこ

まあ、もともとインスタンスとして利用して欲しいってことは、インスタンスのみで十分なストリーミングが可能にしていた方がいいのかもしれぬな...(それだとコールバック関数をどう定義するかって言うのもあるますがなぁ)

ちゃんとかんがえる...
　まず、stream.py内にwhile文を記述したときのことを考える。
　その場合に、生成したインスタンスの関数を呼ぶのはどこからなのかと言う問題が発生する。もし、マルチスレッドでwhile文を回していた場合も、


今出ているKeyErrorだが、ネットくんの情報によると、get()関数の場合はkeyerrorではなくnoneが変えるので処理がストップすることはなくなるため、ライブラリを書き換えることによってその処理を行う方針で行こうと思う。

DisplayYoutubeの設計
何をするものなのか
　インスタンス化し、外部からメソッドを呼び出すことによって、画面の描画を変更、引数によって変えたりするということです。また、内部にstreamオブジェクトを保持し、getメソッドによって画面描画を変更したりします。(getかどうかはわからないですが)

メンバ変数
・
・

メンバ関数   


今やりたいこと

git commandのように、

term-youtube search [video name]
term-youtube add [video name]
term-youtube list

とかでstreamをバックグラウンドで実行しながらどこからでも参照できるようにしたいと思っております！

そこで問題になっているのが、どのようにしてdaemonを有効活用するかなのですなこれが...
    input()を使おうにも、daemonを利用していたらinput()さえ握りつぶされてしまうのですな。考えものであります。


<具体的な処理を自分の頭の中を整理するためにフローしてみる>

フローチャートは同じディレクトリないに入れまあす


daemonの問題ですが、daemon moduleに付属しているopen functionとclose functionを利用することによって、daemon化を切り替えることができるため、良いんではないかなぁ?????

(term-youtube search) とかの時だけdaemonを消すとかさ。A


いやわけわからんことに、daemonを一回closeしてしまうとなぜかpythonの法に復帰するんじゃなくてプロセス自体が終わってしまうという謎の事態に陥っているのさあああ！A


まじでなんでやねんぼけええええええ

どうしようかマジで

タスク
・daemonのプロセス復帰問題
・term-youtubeの形式

...プロセスを復帰しなくても、インタラクティブに行える方式にすれば良いのではないか？

↑そうしよう！





インタラクティブモードとTUIモードの二つを使えるようにする！
(まずは院タラクティブモードの実装を考える。)
